import requests
from unittest.mock import patch
import tkinter as tk

class VirtualForest:
    def __init__(self, root):
        self.trees_planted = 0
        self.root = root
        self.canvas = tk.Canvas(root, width=400, height=400)
        self.canvas.pack()
        self.draw_tree()

    def plant_tree(self):
        self.trees_planted += 1
        print(f"Tree planted! Total trees: {self.trees_planted}")
        self.draw_tree()

    def draw_tree(self):
        self.canvas.delete("all")
        for i in range(self.trees_planted):
            x = 50 + (i % 10) * 30
            y = 350 - (i // 10) * 50
            self.canvas.create_rectangle(x, y, x + 20, y - 50, fill="brown")
            self.canvas.create_oval(x - 15, y - 75, x + 35, y - 35, fill="green")

def check_bug_status(bug_id):
    # Simulate checking bug status from a bug tracking system
    response = requests.get(f"https://api.bugtracker.com/bugs/{bug_id}")
    if response.status_code == 200 and response.json().get('status') == 'fixed':
        return True
    return False

def main():
    root = tk.Tk()
    forest = VirtualForest(root)
    
    bug_id = 123  # Example bug ID
    if check_bug_status(bug_id):
        forest.plant_tree()
    
    root.mainloop()

# Mocking the requests.get call for testing
with patch('requests.get') as mock_get:
    mock_get.return_value.status_code = 200
    mock_get.return_value.json.return_value = {'status': 'fixed'}
    main()
